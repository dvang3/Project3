<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='crash_data' inline='true' name='federated.1xynq290tke77x17ffxyx15hoy2d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='crash_data' name='textscan.1yqskzn128p68m17n9m240ihykkv'>
            <connection class='textscan' directory='/Users/annamarieestores/Documents/Project3/static/Resources' filename='crash_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1yqskzn128p68m17n9m240ihykkv' name='crash_data.csv' table='[crash_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='county' ordinal='0' />
            <column datatype='integer' name='total_fatal_crashes' ordinal='1' />
            <column datatype='integer' name='total_injury_crashes' ordinal='2' />
            <column datatype='integer' name='alcohol_involved_fatal' ordinal='3' />
            <column datatype='integer' name='alcohol_involved_injury' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1yqskzn128p68m17n9m240ihykkv' name='crash_data.csv' table='[crash_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='county' ordinal='0' />
            <column datatype='integer' name='total_fatal_crashes' ordinal='1' />
            <column datatype='integer' name='total_injury_crashes' ordinal='2' />
            <column datatype='integer' name='alcohol_involved_fatal' ordinal='3' />
            <column datatype='integer' name='alcohol_involved_injury' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[crash_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[crash_data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash_data.csv_6EA2037139CA4683BCAFBADC20F21A5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_fatal_crashes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_fatal_crashes]</local-name>
            <parent-name>[crash_data.csv]</parent-name>
            <remote-alias>total_fatal_crashes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash_data.csv_6EA2037139CA4683BCAFBADC20F21A5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_injury_crashes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_injury_crashes]</local-name>
            <parent-name>[crash_data.csv]</parent-name>
            <remote-alias>total_injury_crashes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash_data.csv_6EA2037139CA4683BCAFBADC20F21A5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol_involved_fatal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[alcohol_involved_fatal]</local-name>
            <parent-name>[crash_data.csv]</parent-name>
            <remote-alias>alcohol_involved_fatal</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash_data.csv_6EA2037139CA4683BCAFBADC20F21A5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alcohol_involved_injury</remote-name>
            <remote-type>20</remote-type>
            <local-name>[alcohol_involved_injury]</local-name>
            <parent-name>[crash_data.csv]</parent-name>
            <remote-alias>alcohol_involved_injury</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crash_data.csv_6EA2037139CA4683BCAFBADC20F21A5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[NorCal]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[county]' new-bin='true' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='crash_data.csv' datatype='table' name='[__tableau_internal_object_id__].[crash_data.csv_6EA2037139CA4683BCAFBADC20F21A5C]' role='measure' type='quantitative' />
      <column caption='Alcohol Involved Fatal' datatype='integer' name='[alcohol_involved_fatal]' role='measure' type='quantitative' />
      <column caption='Alcohol Involved Injury' datatype='integer' name='[alcohol_involved_injury]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Total Fatal Crashes' datatype='integer' name='[total_fatal_crashes]' role='measure' type='quantitative' />
      <column caption='Total Injury Crashes' datatype='integer' name='[total_injury_crashes]' role='measure' type='quantitative' />
      <column-instance column='[alcohol_involved_fatal]' derivation='Avg' name='[avg:alcohol_involved_fatal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_fatal_crashes]' derivation='Avg' name='[avg:total_fatal_crashes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[alcohol_involved_fatal]' derivation='Sum' name='[sum:alcohol_involved_fatal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alcohol_involved_injury]' derivation='Sum' name='[sum:alcohol_involved_injury:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_fatal_crashes]' derivation='Sum' name='[sum:total_fatal_crashes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_injury_crashes]' derivation='Sum' name='[sum:total_injury_crashes:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Statewide Total&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[none:county:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:alcohol_involved_injury:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:total_injury_crashes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[avg:total_fatal_crashes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:total_fatal_crashes:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:alcohol_involved_fatal:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[avg:alcohol_involved_fatal:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[NorCal]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Statewide Total&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='crash_data.csv' id='crash_data.csv_6EA2037139CA4683BCAFBADC20F21A5C'>
            <properties context=''>
              <relation connection='textscan.1yqskzn128p68m17n9m240ihykkv' name='crash_data.csv' table='[crash_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='county' ordinal='0' />
                  <column datatype='integer' name='total_fatal_crashes' ordinal='1' />
                  <column datatype='integer' name='total_injury_crashes' ordinal='2' />
                  <column datatype='integer' name='alcohol_involved_fatal' ordinal='3' />
                  <column datatype='integer' name='alcohol_involved_injury' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='fatal_crash_data.csv (Multiple Connections)' inline='true' name='federated.1lnq4bw0az41jj1e1xdcz1bl5i40' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fatal_crash_data' name='textscan.146r8fj1alkhg41by9y5614wssyh'>
            <connection class='textscan' directory='/Users/annamarieestores/Documents/Project3/static/Resources' filename='fatal_crash_data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='crash_data' name='textscan.00x5piw15xwmuo1gt0wtk03dmf08'>
            <connection class='textscan' directory='/Users/annamarieestores/Documents/Project3/static/Resources' filename='crash_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.146r8fj1alkhg41by9y5614wssyh' name='fatal_crash_data.csv' table='[fatal_crash_data#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
            <column datatype='integer' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
            <column datatype='integer' name='F7' ordinal='6' />
            <column datatype='integer' name='F8' ordinal='7' />
            <column datatype='integer' name='F9' ordinal='8' />
            <column datatype='integer' name='F10' ordinal='9' />
            <column datatype='integer' name='F11' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.146r8fj1alkhg41by9y5614wssyh' name='fatal_crash_data.csv' table='[fatal_crash_data#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
            <column datatype='integer' name='F5' ordinal='4' />
            <column datatype='integer' name='F6' ordinal='5' />
            <column datatype='integer' name='F7' ordinal='6' />
            <column datatype='integer' name='F8' ordinal='7' />
            <column datatype='integer' name='F9' ordinal='8' />
            <column datatype='integer' name='F10' ordinal='9' />
            <column datatype='integer' name='F11' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F10]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F10</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[fatal_crash_data.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2018' datatype='integer' name='[F10]' role='measure' type='quantitative' />
      <column caption='2019' datatype='integer' name='[F11]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='2010' datatype='integer' name='[F2]' role='measure' type='quantitative' />
      <column caption='2011' datatype='integer' name='[F3]' role='measure' type='quantitative' />
      <column caption='2012' datatype='integer' name='[F4]' role='measure' type='quantitative' />
      <column caption='2013' datatype='integer' name='[F5]' role='measure' type='quantitative' />
      <column caption='2014' datatype='integer' name='[F6]' role='measure' type='quantitative' />
      <column caption='2015' datatype='integer' name='[F7]' role='measure' type='quantitative' />
      <column caption='2016' datatype='integer' name='[F8]' role='measure' type='quantitative' />
      <column caption='2017' datatype='integer' name='[F9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fatal_crash_data.csv' datatype='table' name='[__tableau_internal_object_id__].[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F2]' derivation='Avg' name='[avg:F2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F10]' derivation='Sum' name='[sum:F10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F11]' derivation='Sum' name='[sum:F11:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F3]' derivation='Sum' name='[sum:F3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F4]' derivation='Sum' name='[sum:F4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F5]' derivation='Sum' name='[sum:F5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F6]' derivation='Sum' name='[sum:F6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F7]' derivation='Sum' name='[sum:F7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F8]' derivation='Sum' name='[sum:F8:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F9]' derivation='Sum' name='[sum:F9:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F3:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F7:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F6:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F11:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F9:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[avg:F2:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F5:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F8:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F4:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[__tableau_internal_object_id__].[cnt:fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F10:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='fatal_crash_data.csv' id='fatal_crash_data.csv_D31B6C07C0214DE798214D9F4D6A21DF'>
            <properties context=''>
              <relation connection='textscan.146r8fj1alkhg41by9y5614wssyh' name='fatal_crash_data.csv' table='[fatal_crash_data#csv]' type='table'>
                <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='integer' name='F2' ordinal='1' />
                  <column datatype='integer' name='F3' ordinal='2' />
                  <column datatype='integer' name='F4' ordinal='3' />
                  <column datatype='integer' name='F5' ordinal='4' />
                  <column datatype='integer' name='F6' ordinal='5' />
                  <column datatype='integer' name='F7' ordinal='6' />
                  <column datatype='integer' name='F8' ordinal='7' />
                  <column datatype='integer' name='F9' ordinal='8' />
                  <column datatype='integer' name='F10' ordinal='9' />
                  <column datatype='integer' name='F11' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='NorCal Crash Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run>North Cal Crash Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash_data' name='federated.1xynq290tke77x17ffxyx15hoy2d' />
          </datasources>
          <datasource-dependencies datasource='federated.1xynq290tke77x17ffxyx15hoy2d'>
            <column caption='Alcohol Involved Fatal' datatype='integer' name='[alcohol_involved_fatal]' role='measure' type='quantitative' />
            <column caption='Alcohol Involved Injury' datatype='integer' name='[alcohol_involved_injury]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[alcohol_involved_fatal]' derivation='Sum' name='[sum:alcohol_involved_fatal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[alcohol_involved_injury]' derivation='Sum' name='[sum:alcohol_involved_injury:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_fatal_crashes]' derivation='Sum' name='[sum:total_fatal_crashes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_injury_crashes]' derivation='Sum' name='[sum:total_injury_crashes:qk]' pivot='key' type='quantitative' />
            <column caption='Total Fatal Crashes' datatype='integer' name='[total_fatal_crashes]' role='measure' type='quantitative' />
            <column caption='Total Injury Crashes' datatype='integer' name='[total_injury_crashes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xynq290tke77x17ffxyx15hoy2d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:alcohol_involved_fatal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:alcohol_involved_injury:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:total_fatal_crashes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:total_injury_crashes:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xynq290tke77x17ffxyx15hoy2d].[none:county:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Imperial&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Kern&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Los Angeles&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Orange&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Riverside&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;San Bernardino&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;San Diego&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;San Luis Obispo&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Santa Barbara&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Statewide Total&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='&quot;Ventura&quot;' />
                <groupfilter function='member' level='[none:county:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xynq290tke77x17ffxyx15hoy2d].[none:county:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xynq290tke77x17ffxyx15hoy2d].[sum:total_fatal_crashes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xynq290tke77x17ffxyx15hoy2d].[none:county:nk]</column>
            <column>[federated.1xynq290tke77x17ffxyx15hoy2d].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xynq290tke77x17ffxyx15hoy2d].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xynq290tke77x17ffxyx15hoy2d].[none:county:nk]</rows>
        <cols>([federated.1xynq290tke77x17ffxyx15hoy2d].[:Measure Names] * [federated.1xynq290tke77x17ffxyx15hoy2d].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{BF2C5AAD-1702-4781-9F0F-D234C1E549EF}' />
    </worksheet>
    <worksheet name='NorCal Fatalities by County'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NorCal Fatalities by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='crash_data' name='federated.1xynq290tke77x17ffxyx15hoy2d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xynq290tke77x17ffxyx15hoy2d'>
            <column datatype='string' name='[NorCal]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[county]' new-bin='true' />
            </column>
            <column caption='Alcohol Involved Fatal' datatype='integer' name='[alcohol_involved_fatal]' role='measure' type='quantitative' />
            <column-instance column='[alcohol_involved_fatal]' derivation='Avg' name='[avg:alcohol_involved_fatal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_fatal_crashes]' derivation='Avg' name='[avg:total_fatal_crashes:qk]' pivot='key' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Total Fatal Crashes' datatype='integer' name='[total_fatal_crashes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xynq290tke77x17ffxyx15hoy2d].[NorCal]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[NorCal]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[NorCal]' member='&quot;Imperial&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;Kern&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;Los Angeles&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;Orange&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;Riverside&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;San Bernardino&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;San Diego&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;San Luis Obispo&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;Santa Barbara&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;Statewide Total&quot;' />
                <groupfilter function='member' level='[NorCal]' member='&quot;Ventura&quot;' />
                <groupfilter function='member' level='[NorCal]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xynq290tke77x17ffxyx15hoy2d].[NorCal]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xynq290tke77x17ffxyx15hoy2d].[Longitude (generated)]' field-type='quantitative' max='-11758934.262066672' min='-14677832.47069522' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xynq290tke77x17ffxyx15hoy2d].[Latitude (generated)]' field-type='quantitative' max='5393604.264091474' min='3790757.9760715612' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1xynq290tke77x17ffxyx15hoy2d].[NorCal]' />
              <lod column='[federated.1xynq290tke77x17ffxyx15hoy2d].[avg:total_fatal_crashes:qk]' />
              <lod column='[federated.1xynq290tke77x17ffxyx15hoy2d].[avg:alcohol_involved_fatal:qk]' />
              <geometry column='[federated.1xynq290tke77x17ffxyx15hoy2d].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xynq290tke77x17ffxyx15hoy2d].[Latitude (generated)]</rows>
        <cols>[federated.1xynq290tke77x17ffxyx15hoy2d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{633D6C5A-F786-4A8C-850B-AC49143F7DFF}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='crash_data' name='federated.1xynq290tke77x17ffxyx15hoy2d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xynq290tke77x17ffxyx15hoy2d'>
            <column datatype='string' name='[NorCal]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[county]' new-bin='true' />
            </column>
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1xynq290tke77x17ffxyx15hoy2d].[NorCal]</rows>
        <cols />
      </table>
      <simple-id uuid='{A99E6672-E306-4F03-B1E8-FECAA43BEE80}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='fatal_crash_data.csv (Multiple Connections)' name='federated.1lnq4bw0az41jj1e1xdcz1bl5i40' />
          </datasources>
          <datasource-dependencies datasource='federated.1lnq4bw0az41jj1e1xdcz1bl5i40'>
            <column caption='2018' datatype='integer' name='[F10]' role='measure' type='quantitative' />
            <column caption='2019' datatype='integer' name='[F11]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='2010' datatype='integer' name='[F2]' role='measure' type='quantitative' />
            <column caption='2011' datatype='integer' name='[F3]' role='measure' type='quantitative' />
            <column caption='2012' datatype='integer' name='[F4]' role='measure' type='quantitative' />
            <column caption='2013' datatype='integer' name='[F5]' role='measure' type='quantitative' />
            <column caption='2014' datatype='integer' name='[F6]' role='measure' type='quantitative' />
            <column caption='2015' datatype='integer' name='[F7]' role='measure' type='quantitative' />
            <column caption='2016' datatype='integer' name='[F8]' role='measure' type='quantitative' />
            <column caption='2017' datatype='integer' name='[F9]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F10]' derivation='Sum' name='[sum:F10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F11]' derivation='Sum' name='[sum:F11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F3]' derivation='Sum' name='[sum:F3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F4]' derivation='Sum' name='[sum:F4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F5]' derivation='Sum' name='[sum:F5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F6]' derivation='Sum' name='[sum:F6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F7]' derivation='Sum' name='[sum:F7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F8]' derivation='Sum' name='[sum:F8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F9]' derivation='Sum' name='[sum:F9:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[sum:F11:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[none:F1:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Alameda&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Contra Costa&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Marin&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Napa&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;San Benito&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;San Francisco&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;San Mateo&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Santa Clara&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Santa Cruz&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Solano&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Sonoma&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[:Measure Names]</column>
            <column>[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[:Measure Names]' />
              <path column='[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[none:F1:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{DE3D4640-1C11-4EE4-BCAB-5DDE49890074}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xynq290tke77x17ffxyx15hoy2d].[:Measure Names]</field>
            <field>[federated.1xynq290tke77x17ffxyx15hoy2d].[NorCal]</field>
            <field>[federated.1xynq290tke77x17ffxyx15hoy2d].[none:county:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB5A9EAD-BC61-44EA-9D59-2844D815B039}' />
    </window>
    <window class='worksheet' maximized='true' name='NorCal Fatalities by County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xynq290tke77x17ffxyx15hoy2d].[NorCal]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xynq290tke77x17ffxyx15hoy2d].[NorCal]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{FB01DBA1-241D-4D24-9168-66138BA5EA1C}' />
    </window>
    <window class='worksheet' name='NorCal Crash Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xynq290tke77x17ffxyx15hoy2d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xynq290tke77x17ffxyx15hoy2d].[:Measure Names]</field>
            <field>[federated.1xynq290tke77x17ffxyx15hoy2d].[none:county:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53CBD962-3BE1-43C1-A933-11142539234B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[:Measure Names]</field>
            <field>[federated.1lnq4bw0az41jj1e1xdcz1bl5i40].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D995AC2-E9CD-4945-B672-6D365FD00BFD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='NorCal Crash Comparison' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdZ3Bc6X7f+e/piNDIOWcOQRAkwTTMAeTkmXvn6sqWLFuybK1du9ra2nKt
      bMu6Cte2LDm8ccnetSy7tFLphbTy9VW4dzSckYY5gCCYMwmCCETO6BzOefYFBmcAEjMEyD7d
      CP9P1RQx3afP8zRDP/085/yev6aUUgghhFh3bMnugBBCiOSQAUAIIdapNTkAKKWQlS0hVg/5
      N5sca3IAMAyD4eHhZHdDCLFE09PTBAKBZHdj3VmTA4AQQoiXkwFAvJL5U3bDMNB1/WuP/abn
      lVLEYrEF/78c0Wh0ScfFYjHz3HN9X86yw1LbEWIlmv93ff7fZRkAxCt58uQJP/zhD1FKMTk5
      ye3bt184Zu4v3Pj4OPfu3Vv0uVAoRHt7u/n45cuXX9r2/A/tc+fOvfQYgLa2NiKRCACnT5/m
      9OnTXL169YXXPX78eNHzfV07Qqx0Sin+9E//lN7eXmDh32VHsjolVrfe3l7y8/Px+/3mY0ND
      Q9y5c4eSkhKcTie9vb3k5ORQWVnJrVu36Ovro6WlBa/Xaz63adOmBef1+XxMT09z/vx5NE2j
      paWFoaEhtm3bxt27dykoKODGjRu43W4OHToEwMOHD6moqCAYDBIMBunr68Pv97N161aUUty8
      eZOBgQF27doFzM5Ijhw5gt1up7+/n0ePHuFwOKiurub06dP4fD4KCgp4/PgxDoeDAwcOJO43
      Vog4m56epqysjCdPnlBVVQXMDgoXL16UGYBYvmg0yvT0NDk5OQu+2d+6dYvW1laampro7u7m
      2LFjeL1eIpEIzc3N7N+/n/7+/heee144HKaqqso83uv14vf7GRwc5M6dOxw7dozCwkL6+/sB
      yMvL4+7du9y9exeHw8Ho6CgVFRVcu3aNmzdv0traSl1dnXn+YDDImTNnuHbtGtnZ2aSlpfHk
      yROKioqoq6ujpaWFnJwc83FZ/hGr2b1798jPz2dyctJcbh0ZGSEtLU0GALF8T58+pbCwELfb
      veBuK03TiEajxGIxDMNAKUU0GkXTNPM/YMFzNtvifwXnH79p0yY+++wzampqsNlsRCIRQqEQ
      TqcTgPz8fCYmJohGo3g8HjRNIzs725wBPH+dITU1lcOHD7N9+3YuXLhAc3MzZWVlAOi6jlLK
      fLy0tNSS30MhEkEpxfj4OJqmkZeXR19fHwBOp5NQKIT9+9///veT28X4U0oRCATweDzJ7sqa
      5PV62bRpE4WFhTidTrKysnC73VRXV3PlyhUikQhVVVV0dHRQVVVFYWEhLpeL9PR0HA4HxcXF
      dHR0UF1dTUFBAXa7nczMTGD2gz8nJ8c83ul0UlRUxMTEBJs3b6a4uJj29nbcbjcNDQ3YbDay
      s7NRSlFSUkJ+fj6xWIyenh6ys7OpqKigra0Np9NJZWUlNpvNHCA0TcPlcnHr1i08Hg/l5eX4
      /X76+/upqqpa8Ljdbic7OzvJv/NrVygUwm6343K5kt2VNUXXdVJTU6mvr6e0tBS/309OTg4l
      JSVMTU2hrcW9gHRdZ3R0lOLi4mR3RQixBFNTUzidTtLT05PdlXVlwUXgtTIWzL/dTwixOkga
      OPEWzACUUgwODiazP3GhlMLlcpGSkmLJ+aPRqLn+HG+6rpvLFFawsu+xWAy73b5q++5wWHdT
      nJV9t/LcVp9/7txjY2Pk5+db0sbzdF1H07Svvf4Ub1b/+cy33M+PNbsENPajH+MOhy07v91u
      t+TchmEsuAAab9L3xJ/b6vOv1L57jh3DkZ/3jceEw2Hcbje9fc84+2DiVbu4LIZhoKGh2az5
      e/o8PaZjd1j35zOfoRvYbBos8d9g3L7yzE3fEjWqvozv5CnCIyPJ7oYQ61ZqS8tLB4A5Md3g
      f5y69/IDRVzFZQAIBAJ88cUXpKSkUFdXR21tbTxOa64HPv+NUtd1enp6zHaUUpZ96xRCiLUq
      LgPA5OQkWVlZHDhwAJvNxv379xkaGiI7O5stW7Zw+vRpNE2jsbGRvr4+c514amqKsrIyMjIy
      uHXrFuFwmMzMTAKBAO+99x7nzp0jEomwZ88eOjo6MAyDtLQ08vLyOH/+PMFgkIyMDB4+fEha
      Whr79u2TgUAIIZYoLus1paWl5Ofn8xd/8RfmFgFut5v79+/z8OFDGhoaaG1txefzEQgE2L59
      uxkkunfvHj6fj82bN1NeXs62bdvIyMigr6+PUChESUkJ169fRynFsWPHCAQCVFdX09DQQFNT
      Ew8ePOD48ePY7Xa8Xm883o4QQqwLcRkAfD4f1dXVvPvuuzx8+JC2tjZ27dpFVlYWKSkp+P1+
      M05fV1eHUorr16+za9cuUlNTzfPMfXvXNA2n04nNZiM/P5+NGzeaz81d4Z6fNtV13QySCCGE
      WJq4DAA2m4329nba29vZt28ftbW1XLx4kYqKCmpqavD7/bS1tZGbm0tWVhaaplFSUkJ7ezs1
      NTXk5+eTmZlJaWkpqampVFVVUVRURH5+Pg8fPkTTNHO9v7a2FofDgcfj4f79++zevZtz585R
      UFAgIRIhhFiGNXsbaM8v/TMccheQEElT9P3fwN1Q/43HzN0G2tXdyy/990sJ6pmYs2YHgFAo
      ZNmMYO4vrRWi0Sh2u92y22mt7HskEsHhcKzavjudTstuIrCy7+FwGJfLZUnflVJEIhFL++52
      uxkYGEjYxntzmxAmasnYyj/75y3382Nl3LQvhBAi4dZsQRjfZ58TtTAJHLQ0TWtbapBv2azs
      u24YsxfpLTn76um7PS+PjLffisOZ1o+YbvBHn91MSFtWJ9afZ3VSe0FbhoFtGZ8fcR0A5tLA
      8fjNNQxjwc/L3afFd/qMJIFFUrjq6mQAWKaYbvCDM/eT3Y11J64DQEdHBzMzMxiGwVtvff0/
      AMMw6Orqor5+8QtE3d3d3Lt3D5fLxbZt2+jv72fr1q3x7KoQQqx7cR0AhoaGOHLkCB6PB8Mw
      OHv2LOFwmJ07d/L48WMCgQCGYVBdXc2ZM2cIhUKkpaXR09NDSkoKe/fuRSnFvXv3eO+999A0
      jfHxcQC6urrM43bu3MmVK1fw+/3U1tbS29tLamoqe/bsiefbEUKINS2uF4GPHj1Ke3s7J06c
      QNM0sxLUvXv3CAQCtLa2YrPZqK6upr6+ns2bN5Obm0tKSgoPHz4EZpeRFrsbY/5xczOIY8eO
      vfB6IYQQSxO3AWCuDOORI0ew2WwMDg4yMTHBtm3bFmzWNnd9YC7Je+HCBbZv327uBW6z2YhG
      o8zMzBAIBMzzP3/cXH3Yixcvsn37dvLylrbroBBCiFlxXQKamJjg7t27VFZWUlRUxKNHj+js
      7KSmpsa8qFtbW2vWcb137x6NjY20tbVRUlJinqe1tZUrV66gaRo7duygpKQEj8djHudwOKiq
      qgJg48aNtLW1SfFuIYRYpjUbBOv5p/8cx+hosrsi1iF3XS1F3/+NBY9JEGxxc78vT7t7+ae/
      32ZJG+LrrdkBQJLAi5Mk8OIkCbw4SQK/PkkCCyGEWHHWbBLYe+IzIhYmgQMWJoFt2tJrei6X
      pX3/siD16u27nXhEgR15eWS88/brn2gdiekGf3gikUlg0LTEfP/V9Rh2e2I+ag1DR9NsHNhS
      SX1Z7kuPT/oAMJceBuIaz/afOUtEksAiCVx1dTIALFNMN/jhWUkCx0tFYebqGAAeP35MZ2cn
      Ho+H3bt3k5KSYj631Fq/UhNYCCGWL+kDQCQSoaWlhZKSEmKxGOfPnycQCPDGG2/w5MkTMjMz
      aWho4OLFi3g8HrZs2cLZs2ex2Wy0tLQQiUR4/Pgxqamp7N+/XwYCIYRYoqRfBFZKcfnyZU6f
      Pk00GuXp06ccP36c69evU1ZWRmdnJz6fD8Mw2LBhA5FIhOrqao4ePUpPTw+PHj3i+PHjOBwO
      ZmZmkv12hBBi1Uj6AKBpGm+++SZHjhzB4XCYCV+Hw0FGRga7d+8mJyeHw4cPc+nSJSKRiPk6
      mB1AotEowWAQp9OZzLcihBCrStKXgIqLi811/7l9ggAOHDjArVu38Hg85OXlcfPmTcrKysjJ
      ycHlcuF0OqmqqiItLY2LFy9SXFxMWlpaEt+JEEKsLkkfAOb29gGw2+2Ul5cDkJ2dzaFDh8zn
      5v8890E/Fxw5cuTIC+fVXE40l8uKLqOIy92CSSF9t/7cmktmosulAW5nYoJZ64F9iUEwSQK/
      AkkCL06SwF9PksCLkyRwfEkSWAghxJIkfQnIKt5PTxAJhSw5t9VJYCvrlVqeYrbo2z8kvu/2
      3Fwy33/PkvbEQjHd4P/99EZC2lrLNYGXm8aP2wCglDLf6FLDW8Ar/yG87PX+s+ckCSxei7Om
      RgaABInpBn9+7kGyu7HuxOXrmq7rfPLJJ5w9e5Z79+4t6TWGYXD58mXgqw/z5RgeHmZycnLZ
      rxNCCDErLjOAcDiMYRgcPHgQp9PJ06dP6e7uxul0snfvXn70ox+RlpZGRUUFjY2N5usCgQCj
      o6Ncu3YNu93O0aNHuXz5Mn6/nzfeeAO3283NmzcJh8O8++67PHr0iE2bNnHnzh1yc3PNimJz
      7R8/fjweb0cIIdaFuMwAUlNT2bZtG5999hl37twhOzublJQUHj9+jFKKnJwcjh07xvDw8Auv
      vXnzJsePH6eyspLe3l7y8/NJSUnh/v373Lp1i+PHj5OVlYVhGIyPj6OUYmxsDJ/PRygUIhwO
      m7WGhRBCLF1cPjXD4TAej4e33nqLvr4+Ll68SEtLi1mnd349YJhdMvJ6vTgcDhwOB4FAAK/X
      i81mo7Ozk61bt+JwOMxb0EJfXsyNRqOEw2Gi0ajZ9vPnFkIIsTRxWQKy2+08fPiQaDTK3r17
      mZqaor29nYqKCmw2m1kHuK6uDoDOzk6GhoZ48803Abhy5QoZGRlUVlYyMDDAgwcPqK+vJysr
      i7a2NkZGRrDb7WRnZ3P16lVqa2vJy8vD4XBQX18PYP4qhBBiaVZFEOzBgwc0NDQs+VYqXdfp
      +eVfwSk1gcVrcFVXvVDb91VJEGxx82sC//IftFvShvh6q2IAWC5JAn89SQIvTpLAi5Mk8OuT
      JLAQQogVZ+0mgf/qr4iEVmdN4FWbBNZ1NJttxfU9/fBhXJUVFvRIxEssZvD7n1xPSFuGMtBY
      m0lg3TCw2TS0JW5tmPABQP8yqqxpGqFQaEEJyOV42dTUf+6CJIEFAO6Nb8gAsMLFDIO/uPAw
      2d1YdxK6BKSU4k/+5E/o7e0F4OLFi8t67Xy6rptJYiGEEMuX0BnA5OQkdXV1PH78mKqqKmB2
      yePs2bOEQiF27tzJgwcPCIfDeL1ePB4POTk5lJeXc/v2bdxuN/v37+fChQtEo1F0XefJkyf0
      9vbidrvZt29fIt+OEEKsagmdAdy8eZPMzExGR0cxDAOYDXDl5eXhcrnMLMGxY8fIyMjg2LFj
      zMzMcPXqVUpLSxkbG6Ovr4+0tDQOHTqE2+1ekDoWQgixdAkbAJRS+P1+c0+guWWg0dFRZmZm
      aG5uXrDMM/8CjcvlIj09nZaWFtxuN6FQiFAohK7rtLW1sW3bNnJychL1VoQQYk1I2BKQYRhs
      2bKFyspKysvLGRwcpKGhgby8PB4+fMizZ8+oqakxZwYNDQ3AbMI3Pz+fa9eu4Xa7aWlpYWho
      iJs3b1JbW4thGHR0dJhLSkIIIZYmYQOA3W6nsrJytlGHg4qKr+7KOHjw4AvHzz0/9+v+/fvN
      57Zt27bg2Jqamhdeb0tJQbOqSLxSSy648GrnBsuq367DvmsJugVPvDoNSEtJUC3luYWGRG0f
      ZuW/uRfa+vLXJTYnSeBXIEngxUkS+OtJEnhxkgSOL0kCCyGEWJK1mwT+8SdSE3gRVvZdNwxs
      Se67PSeHzG99ZEn7wjrRmMF///G1hLS1pmsCL/O9vfYAYBgGhmHgcMRnLFFKEYvFcDgcr/UH
      5L9wUZLA65CzslIGgFVINwx+dPFRsrux7rzWEtDw8DB/9Vd/xZkzZwgEAiilFq3vq5TiwYOX
      F3xWSnHq1CkuXLjA3bt3zceeF4vF5L5/IYR4Ta/1tf369eu899572O12otEon332GUop9uzZ
      w71798zqXc3NzZw7dw6/34/D4cDn81FWVsbg4CA+n4+Ghgaqq6sZHx/H4/Gwe/duAO7evcvg
      4CCZmZls2LCBixcvkpGRQVFREefPnycSiZCSkkJvby8ul2vBnUJCCCG+2WvNADRNM9e2Hj16
      RHNzM8eOHTMLube2tuJ0OikpKaG+vp4dO3YwNDREdXU1VVVV5OTkkJKSYs4OvF4v2dnZwOw3
      /4GBAY4fP87MzAx+vx+lFLW1tVRXV9PQ0EBTUxNZWVm43W46Oztf87dCCCHWl9caAFJTU+nr
      68Pv9+NyuZicnGRmZmbBLWlzv0ajUaLRKC6Xi7KyMqLRKE+ePKG5udm8flBcXGzuBeTz+YjF
      YkQiESKRCFlZWRw8eJArV66YtYFjsRiXL19m27Zt5sAhhBBiaV5rANi/fz/Dw8PcuHGDqqoq
      IpEIjx49YteuXWaSt6GhAU3TqK6u5vbt2+bjTqeTgoICOjs72bBhAzA7oOzatYv29nbGxsbY
      uXMnbW1tNDU1oZTi9u3bVFVVkZaWRkFBAY8fP6apqYlr165RW1v7mr8VQgixvqzZIFjv934V
      5+iYJedXWBcitDqkaHXfrbyxbinnd5aXU/Qvl1/HV4Jgi0tkTeBf/aMOS9p4UWKjwEqphN1y
      utx/hWt2AJAk8OIkCbw4GQAWJ0ng1ydJYCGEECvO2k0C/+jHhINBS85tGAZ+i77lGoZCsy21
      ouernN/Kvhuv9O3fnp1N1nc+tqBHYrWIxnR+70dXE9KWJIG/YtkAoJQiGo0ua1o9v17wnGAw
      SGpq6rLb91+8JEngVcJRVioDwDqnG4pPLkm4M9Es+SqolOL06dO0tbVx4cIFDMPg4cOXF3zu
      7Ox8Ifl76dIlK7oohBDrnmUzgKmpKbO0Y1dXF+fPnycajZKenk53dzcOh4OtW7dy8uRJnE4n
      W7ZsIfjlks2JEydwuVxmIljXdc6dO2fWDe7v72fr1q3m7aeXLl0iIyNj0boCQgghFmfJDEDT
      NFpbW+no6ODUqVNUV1dTX1/P5s2bycjIwO128+TJE6LRKDU1NRw7doze3l4mJibM0pGlpaWk
      fVnQRdM0cnJycLlcPHr0iImJCQAmJiYIhUIopRYtCiOEEOLrWbYE5PV62bdvH36/H8DcF2ix
      5O7z1wiOHj3KzMwMT548AWbrBvv9fhobG81rC6FQCL/fb37z7+joIBKJWPF2hBBiTbJsCWhm
      Zobu7m5aWlqw2WyUlJTQ2dlJc3Mz169fp66ujvT0dMrKynA4HNTW1qLrOjB7LSAWi1FVVUVq
      air5+fl0dnYyMjJCbW0t4XCYK1euUF1djVKKO3fuUF1djdOZoJJyQgixBlgyAGiaxqZNmxY8
      1tzcbP48VxsYICUlBYCSkhLzsbm1f4Dy8nKAF3b6rK6uNn/et2/fC32wpadhy8h4hd6/nKXJ
      Povrh1rZ91c9t82iwJ5YPTQgM82VkLYSXhI4wW2xjPYkCfwKJAm8OEkCfz1JAi9OksDxJUlg
      IYQQS7Jmk8Azf/kjy5LAVib7ElETOF59Tz98CHddXVzOJda3aEznd/8yMZvBKUOB9uLNJ1Yx
      dAObfWnftQ9vraKxqsDiHn1lRQwAuq5jGAbAC1MzpRShUGjZaeDApTaikgS2lHtDgwwAIi50
      Q/FpmxR1qi3JSegAsCKWgHp7e/nrv/5rfvSjH/Ho0cLC0NFolI6Ob/5msAYvYwghhOVWxAyg
      pqaGlJQUxsfHaWxs5MaNG2zbto3r16/T1NQEwMDAAA8fPiQWi3HkyBHOnTuHrus0NTVx9+5d
      XC4Xhw4dSuC+20IIsbqtiBnA8yYnJxf8CuDxeHC73fT39xMOhxkZGeHYsWNcv36dkpISxsfH
      zdCZEEKIl1uRA8Bc0tfn85mPXbp0ic2bN1NQUIBSioqKCmw2GykpKWRkZNDS0oLLlZj7iIUQ
      Yi1YEUtAAFlZWea9shs3buTKlSvU1tZit9upr6/Hbrdz69YtysvLcbvd1H158XH//v3cuHGD
      lJQUqqqqkvkWhBBiVVkxA0BaWpq5+VtlZeWCtPBcSriwsNB8rLi4GJhNEu/Zs+eF89k8Hmyh
      kJVdXvc0p8y4RHxoGmSlJyYstZK5HIkJp82RJPArkCTw4iQJ/PUkCbw4SQLHlySBhRBCLMmK
      WQKKt5k//wsLk8AG9iUm+5brVZPANo+H7J/+KUv6JITVojGd//LnVxLSlqEUGtYkgVPdTn7+
      vW1xP69VkjYAKKUwDMOchsViMex2+yv/oQQCAfMaAkDgcvu6SgLb8/JkABCrlm4oTrQ/SXY3
      Xlu2x72qBoCkLQGNjIzwB3/wByil0HWd3/3d3zVv+3zZZQml1AvHtLW1WdZXIYRYi5I2A9B1
      nfT0dEZHR/F6veTn52MYBu3t7fh8PsrKyjAMg7GxMfLz8xkfHycSibB161auX7+Oruvs3r2b
      sbExenp6GBgYSNZbEUKIVSmpF4E3btzIgwcP6OnpoaamBl3X6erqorCwkIcPHzI1NUVhYaF5
      S2hrayuBQIBIJEJBQQF37tzh6dOnHD9+3CwcI4QQYmmSOgC43W7C4bB5+52mabjdbgoLC9m2
      bRt2u53y8nKcTic+n49AIIDdbsfpdFJaWsqGDRuIxWIEg0ECgUAy34oQQqw6SVsCysrKIjU1
      ldzcXFwuF9FolPT0dN58802ePHlCeXk51dXVuFwunE4nmzZt4ubNm2zZsoWKigq6u7tpbGxk
      165dXL16dUFwTAghxMslbQBIT09fNKhVWlq6aCBkfjp448aNC54rKHhx/2x7Zga2SCROvX2O
      pXV7X62CqD0zM/5dESJBNA1yMlIS05iFRYEzV1maec3mAAr+xS9LEliIVcLtdPAH/+LjhLSV
      6CTwSiafMkIIsU6t2RnAzJ/9OaGANUlgw9Cx2az59qCU8WUY7pvnp+mHDpKy8Q1L+iBEokVj
      Ov/3nyUoCRzHutupbgf/8P2WOPQqOVbEABCNRlFKvbCfv67rRKNRUlKWvzYYaL+yppPA7vo6
      kAFArBG6ofj8yupLAmelu1f1AJD0JaDBwUH+5m/+hnPnzjE8PAx8lQSempri4cOHLz3HGtzQ
      VAghLJf0GcDk5CT5+fm0tLRgt9tpa2vD7/eTm5tr3vXT1dVFT08PNpuNrVu3curUKZxOJ1u2
      bCEcDtPd3Y3D4eDIkSNSE1gIIZYo6TOAxsZGMjMz+fGPf8zAwACBQIDW1lbGxsbMY9LT03G7
      3XR3dxONRqmvr6e1tZX+/n66u7s5fvw46enpTE9PJ/GdCCHE6pL0GcDo6ChFRUWkpqby7Nkz
      QqEQoVCIaDRqHtPR0cHhw4fNJSL4aitXpRR+v5/p6emEFV0QQoi1IOkDQGpqKnfv3sXlcrFj
      xw5GR0e5fv06u3fvJj09nfLycvLy8rh9+zYbN27E4/FQVlaG0+mkrq6OtLQ0bt26RV1dHamp
      qcl+O0IIsWokfQDIyMhYUNO3pKTErAEMmHcAzd/sbe6Dfq5G8L59+144rz0rE3ss+sLj8WBl
      EFipL28Afcn5NZntiDVE0yAvMzFf4OIZBM5IW93/DpM+AFil4Jf/uSSBhVgl3E4Hv//L305I
      W5IE/op8ygghxDq1ZmcAMz/8M0IWbRFt6Aa2BNYETj90kJTGRkvaE2IliMZ0/tMP2xPSljIM
      iFMSeCkMXceWoNmGYRjYNA00jeM7amisenGjzPmSMgAopQiFQrjdbsuWOgJXOtZMEthdXw8y
      AIg1TDcUf9PRlexurCmbqgpW3gCglOKLL74wL+Tu378fpdTXjsbf9JwQQohXl5QZgNfrZfv2
      7eTk5DA1NcXFixcBOHLkCOfOncPhcGCz2WhpaVnw3NmzZ7Hb7Xi9XjweD6WlpaSmptLb24vN
      ZuPw4cPJeDtCCLEqJXwA0DSNt956i2vXrpl307S2thIMBrl37x5Op5PW1lZOnjzJrVu3zDrA
      9+/fx+12c/jwYc6cOcOBAwe4dOkSGzZswO1209nZmei3IoQQq1rC7wJSSjE6OsqOHTsIBoN4
      PB6Gh4cZGhoiIyPDXO7RNA2Px8PIyIj53PM0TaOjo4Pm5mY8Hk+i34oQQqxqSVkCisVi3Lp1
      i927d1NQUMCNGzdwOBw0NzeT+WVpw40bN1JYWGg+19jYaA4QGzduxG6309DQQCwW4+7duzQ1
      NSXjrQghxKqVlCWghoYGGhoazMd27Nhh/jyXAp779ZueKy4uBhamhOfYs7Ox63qcez9LodCs
      KCj6NbRXqIcgxGqiaZCflZag1l6t7vbqaO+rtlJcL7/1VFNrcDN9XdcJhUKSBF6ElX2PRCLm
      BXwrWN13p9Np2R1nVvY9HA7jcrks6btSikgkYmnf3W43AwMDlJaWWtLG8xKdBLbyz/55y/38
      kCSwEEKsU2s2CTz9g/9pWRJYNwzscfqWm37oEClNm+JyLiFWq2hM53d+cDkhbTkdGv/4ox0v
      P3AdSFoSOBaL4XA40DQN/cu1+sWmZEopAoHAspdzglevEVsFSWBXQ70MAGLd0w3FF9eeJqSt
      9BSnDABfStoS0B/90R8xMDAAwJkzZ7h06dKix+m6TkdHByC1f4UQIp6StgRUVlbG48ePKS4u
      Ni/KDA4O8uDBA8LhMG+//TanT58GZm8bffbsGffv38dut3Pw4EFOnjyJpmnU1dXR29uLpmkc
      OXIkWW9HCCFWnaTNABwOB7qu09fXZxZ/T0lJweVyMTQ0xNDQENnZ2Rw6dAi3283NmzcpKChg
      cnKSmZkZZmZmOH78OGlpabhcLnp7e5P1VoQQYlVK6l1ANTU1nD17ltraWgDa29tpamoiNzcX
      h8PB9PQ0MzMzxGIx0tLSyM7OpqWlBbfbTWlpKTabjatXr0oSWAghXkHSloA2bfmjWkMAACAA
      SURBVNpEUVERSimcTicbN27E6XRy//596uvrycvLo6SkhCdPntDY2Eh+fj63bt0iJSWFlJQU
      M0jW0tLC/fv32bx5c7LeihBCrEpJGQA0TTPTvHV1dcBXqd69e/eax23cuHHB63bu3Gn+PFcP
      uKysjLKyshfasOfkYLfoonE8t6i2pUgheyE0DQpzrAluPi/VtWbvfl+2Nfs7UfDPfmlVJoGF
      WI/cTgf/7Z9+lJC2otFoQtpZDSQJLIQQ69SanQGM/rv/wNTEuCXnVmp2ymrNyb/89SXnz/6Z
      nyF9395vPkiIVSIcjfG//Pu/tOz8P926meM7ay07/2qV9AEgHA7T09NDbm4u6enp+P1+8vPz
      v/E1SimUUt+44ZE+NYVtzJoBYCVQoVCyuyBE3CgFo1PWbN0CEAjLss9ikr4EdOrUKdxuN319
      ffj9fvr6+picnEQpha7rTE1NEY1GUUrh9XoJBoMEAgHOnz9PMBhccIwQQoilS/oMICUlhYGB
      AbZu3WqWfvR6veTk5JCRkcHk5CS9vb1s376de/fukZubS2FhIX19fZSXl2Oz2ZicnKSvr49v
      fetbyX47QgixaiR9BnD48GFqa2v55JNP0HWdzZs3s3v3bnw+n/nfzMwMOTk5KKUIh8OUlJRQ
      WVlJbW3tgmOEEEIsXVIHAKUUly9fZnR01NwZdL7e3l7y8vLMHUErKioYHR1F13XGxsZ49uwZ
      PT095jFCCCGWLqlLQJqm0dLSwuTkJPX19TidTrKzs3E6nWzfvh2lFFNTU/zkT/4kKSkpGIZB
      a2srqampHDt2DF3XOXbsGFNTU3z3u99N5lsRQohVJ+nXANxut5kChq9qAswFreY/N//nueLx
      zz8+J23nDlzBYNz7C2DoOjaLyskZhoGmaS9NGju+TFILsRbYbRrHd1h3m2ZlUZZl517Nkj4A
      WCXzuz+xKpPAVtcEFmIlcjrs/B/f3Z3sbqw78ikjhBDr1JqdAYz+23/P1PjrB8Fs6emU/Id/
      F4ceCSG+Tjga4x/+279IdjcsoXhpsD9pXmkACAQC9Pb2UlhYSG5u7jceq5RiYGCAcDhMRkYG
      BQUFy2orHA4TDocXrPkvhT49jW1iYlmvWYyKRF77HEKIb6YUjM9Yc81OfL1lLwEppfjiiy/w
      eDwMDAyglDLvxQeIRCJMT08TmrdVQUdHh7muHYlEiEQiRKNRAoEA09PT5uu8Xi+BwGwcPBQK
      4fP50HWdSCSCrutMTk4Si8XMNkOhEEopJiYmiMgHtRBCLMsrzQCcTieDg4M0NzcTjUa5e/cu
      ExMTbNu2jYsXL1JVVcXg4CAfffSReXxWVhZut5svvvgCwzDYs2cPT548IRgMUlxczOPHj82E
      77Fjx7hw4QKFhYXU1tYyODjIzZs3ycnJITs7m1AoxPj4OHl5eUxPT+N0OhkYGOCDDz4w7yIS
      QgjxzZY9A9A0jXfeeYeysjI++eQTwuEwMzMzaJrG+Pg4ubm57Ny5c0GJRp/PR1dXF+Pj42ia
      xrvvvktGRgbT09NomsbIyAjp6ens3r2b3Nxcuru72b17N7t27QJmb40sLy9ndHTUXFI6cOAA
      mzZtwu/3s3PnTsrLy83ZhBBCiJd7pSWg8+fPMz4+jtPpNFO83/TNOycnh+3bt1NeXo7b7cZu
      t+P1eolEIjidzheOr6iooKOjgxs3bpgJX13XqayspKuri4KCAtrb23n48CFut5vbt2/T19e3
      7OsEQgixni17CUjTNHbt2sX09DQbN27E4XCQnp6Ox+PB5XKZtXr37dtnvubQoUPmz3OP5+bm
      snv3blJTUxcMAvv27cPtdnPw4EEikQjZ2dlkZWWh6zoTExPU19fjcDiYnJw02xseHjYfF0II
      sTSv9Ik5V5h9TlFR0QvHzAWlNE1bEJqa//hidwTNPT9/Cclms+F0OiktLTUfm3/3Uckiqdi0
      3btwBV5/f3HbvPcphLCG3abx9q7EFGwxDIWmEbe63i+j6wZ2e2IiV7M7CdiWXLBqzX5lzvzO
      x5YlgYUQ8eV02Pnfv5OYJHA0GsVmsyXshpFE1hBf7k4CkgQWQoh1as3OAEZ/+98yZVFJyHgm
      +7L/7t8h/eDBOJ1NiNUpHI3x87/958nuxqIy0tz8p//zvWR3wxIragAwDIOuri7sdjulpaUv
      TJsMw8Bmsy2tJvCMF9vUlNVdfm1GOJzsLgiRdErBpHdl1rnW9bVba2RFLQFFIhHu3buHUorP
      P/8cXdeJxWIYhkEkEuHkyZPMzMwQDAY5deoUPp8PpRSTk5OE5YNUCCGWZUXNAGB2n6GhoSGy
      srIYHR1lenqa0tJS7t+/z+DgIF1dXeTk5DA4OEh/fz+hUIhIJMLw8DDvvfeeJIGFEGKJVtQM
      ACA7O5vKykr8fj9KKQzDAGZv2SorK2Pr1q1UVFRQVlbGG2+8QW9vL9FoFKUUQYsKwAghxFq0
      4gaA8fFxhoaGiMViuN1uOjs7uXbtGjCbDbh69SqhUIiZmRk6OzspKyvD4XBQVFSEy+VKcu+F
      EGL1WFFLQG63mw8//NCsFWyz2dizZ48ZPLPb7YyNjeF2u3n77bcJBoPU1dUxOTmJ0+mUAUAI
      IZZhRQ0AmqaRlbWwdufzaeHCwkIAUlNTSU1NBVi0JkHam7txW7QkpOt63K41OMvK43IeIVYz
      u03jnd11CWlLGQqWkQROda2oj8m4WrPvLPPjb6/KmsBCrEdOh51f/HhXQtpKdBJ4JVtx1wCE
      EEIkxpqdAYz81m/jtCgJjFIsebelVzo3xCNr7MjNpfi3/81rn0cIq4WjMf7+byUmCay+/Dem
      JahSr1LK0o3nfuGDFg5trXql11o+AIyNjZGSkoLH4yEcDjM+Pr5gV8/nLSXluxSG14exzgvE
      6M41O76LNUYpmPKtzCTwSheJ6q/8WsuXgDo6Orhy5QoAt27d4vz58yilmJ6exuv1ArNr6pOT
      kwSDQfx+P6dPn8bv96PrOqOjo2YiOBaLvfD4XO3haDSKrr/6b4QQQqw3ln9FdDqdGIaBYRhM
      T0+Tm5tLb28vXV1dRKNRtm7dyrlz56itraW/v59t27YxNDTEyMgIT58+paCggFu3blFRUcHV
      q1fZvn07/f395uNKKQ4cOEB7ezu7du0y7wwSQgjxzRJyEbimpoY7d+6YJRufPn3KwYMH2bdv
      H0+fPiUvL4/t27fj8XgoLi6mvLyc6upqhoaGzNKRSil2795NQ0MDg4OD5uNbtmzh+vXrhMNh
      +fAXQohlSMgAUFVVxblz52hqajL///z581y8eJHq6uqFHbLZGB0dpbe3l4KCAtLT082KYykp
      KWiaRmFhofl4QUEBPT09VFZWJuKtCCHEmmH5EtDBgwex2+38wi/8AikpKRw6dAin00lOTg42
      m43MzEwzyLV//37sdjvvvvsuuq7T2trK1NQUHo8Hu92Opmlomrbg8VAoREZGBvX19Va/FSGE
      WFMsHwDmtmeYqyE89//Z2dkvHDP36/wAV15e3gvntNvt5uNjY2Ps3bv3hVBH2p43cQetuatA
      N3TsNmtCJIZhoNm0uNyiZvNISUyxOthtGu+9mZgvcYYy0NASVxPYws8LgPLCzFd+7aq/TzA/
      P3/RxzO//a1VmQRebk1PIdYCp8PO//rtnQlpay3XBF4u+ZQRQoh1atXPAL7OyG/+Fs6xMUvO
      7fnbfwv3W8ctObcQ61E4GuNnf/PPEtTaXInHBCWBUQlLHc9VLP9HH21fUjrYkgFAKUV/fz8z
      MzPU1dW9dPrj8/kIBAIUFhailKK7u5uampoFxxiGYV4EXgrD78f4MmgWd5GINecVYp1SCmYC
      UtY1XqKxpYViLVkCGh4eprOzk4yMDMbGxohGo4yOjpr1fYPBIKOjo2a1r+7ubj777DNg9qLu
      D37wA2C2POT4+DhKKdrb23n27BnRaJRQKMTY2Ji5bcTo6KjUBBZCiGWyZAaQnp7O6OgopaWl
      NDQ00NnZSSgU4sqVK+zZs4fPP/+cqqoqnj17RktLCzC7z//o6CgPHjxg06ZNKKV49OgRsViM
      x48fMzo6ilKK9PR0Ll68SGlpKc+ePcPv95OWlkZfXx/vv/8+DseaXdUSQoi4smQGkJGRwccf
      f0w4HObSpUtMTk4yPT2Nz+dDKUVjYyM7duwgEAiYr9m4cSP37983S0EqpRgbGyMUCuH1eikr
      K6OxsRGHw2HuGzT3X0tLC+Xl5czMzFjxdoQQYk2ybAmora0Nn8+H2+1mYGAAj8djLvksxu12
      Mzk5SXFxMQCxWMws9aiUIiMjg+vXrxONRsnIyMDj8ZCfn09qairXr1+nr6/P3GpCCCHEy1my
      XlJYWEhaWhqGYZCZmUlTUxPBYJBNmzbhcDjIysrCbreze/duYPbbv81m47333sPhcFBXV4fT
      6eTtt9/GbrfjdrtxOBzk5eWRkZHB+++/j9/vJzMzk7q6OiYmJsxzCyGEWBpLPjE1TSMjI8P8
      /7mi7nPmQk5Op3O2E19+cD+fCH6+PvD82r/zC8AvFgZL27fXsprAjooKS84rxHplt2l8sLch
      IW0ZxpdJYFuCksBxrCH+MoY+u5PAUtPBa/Yrc+ZHH1qaBBZCxI/TYecff7QjIW2t5STwcncS
      kCSwEEKsU2t2BjDyr3/TsiRwoksC5/zcz5F+6KA1DQqxAoQjMf7uv/5hwtpLT3Xye7/0UcLa
      W6ksHwB8Ph/Pnj0DoKysjPHxcbMGQH9/P4FAgNLS0mUv18RiMYaGhigvL1/0eSMQxPD5X6vv
      30S9/JC4nVtFoxa2JkTyKcAXlIR9olm+BNTT00MkEiErKwun00lXV5f53I0bN3C5XHzxxReM
      j49jGAZDQ0Nmfd9IJILX6yUWizEyMmKuvQeDQYaGhujt7UUpxcjIiFkbWAghxNJYPgOY26oh
      Fovh8XgWPOdyuaiqqqKoqIjLly8TjUYpKiriypUr7N27l7/8y79k+/bt5OTk4PV6uXjxIq2t
      rZw5c4aysjIALly4gMfj4dKlS3zwwQdyK6gQQiyR5TMATdOorKykrq7ua2v2RiIRs+JXc3Mz
      Ho8HXddpbm5m27ZtTE1NMTk5ic/no6+vj507d9LY2AhAKBRi27ZtVFRUSBJYCCGWISF3AXV1
      dfHgwYMXPqB9Ph+XLl3izJkzbN++HZhdFvL5fNjtdjM70N/fbyaJi4uL6ejo4Nq1awCkpqZy
      9epVent7JQkshBDLYPl6ycaNG82Lvm63m4MHv7qb5f3330fXddxuN3a7naNHjzIxMcHmzZux
      2Wzk5OQA8NZbb+Hz+WhqasLpdHL06FGUUqSmpmK325mYmKC5uVmWf4QQYhks/8S02+1fe4fP
      8+EIm822aKp3roj8nOevJSxWNzh9/z7cFl0YtjLZt1jdA2fF4nc6CbFW2G0aH+7bkJC2lGHg
      dsmXRVjDOYCMDz+QmsBCrBJOh51/9OH2hLQ1lwQWkgQWQoh1a83OAEb+1b/GMWpNEniu7uZy
      5fzs38Nz9EjceyPEaheOxPiZf/U/LW3jZ9/Zyntv1lvaxmqzYgeAufxAYWEhsVgMr9e74DpA
      IBDA6/VSVFS06OuNYAg1r+DMSqBisWR3QYgVSQH+kLWJ99gS6+SuJyt6Ceju3btMTEzQ3t5O
      LBYjGo0yODiIrusEAgGGh4dRSjE0NCRJYCGEWKYVOwBomsa+ffs4c+YMwWCQ/Px8Pv/8cyYm
      Jvjiiy/M4y5cuMDIyAifffYZMfmGLYQQS7ZiBwCYvU00IyODHTt2mFtJNDU1LbgFMxQKsWXL
      FkkCCyHEMq3oAQBmk74ulwuHw4HP5+P69esLagunpaXR0dFBb2/vCxXEhBBCfL0VexF4zptv
      vmnuE/TOO+8wMzPD1q1bAcjJycFmszE5OcmWLVsSVuFHCCHWghU/AMzf3sHhcCyoCzxnscfS
      D+xfcUlgV2WlBb0RYvVz2Gx8a/8blrZRW5rz8oPWmRU/ALyqjA/eX5VJYCHWI4fDxi980JLs
      bqw7K/4agBBCCGus2RnA8Pf/Fc7R0aS1b8/MpPR3/mPS2hdiNQlHYvz0v/xBYhqbq7ka57re
      Wekp/Ndf+jC+J7XYihkA+vr68Hq9FBcXk5OTQ3d3NzU1Na98PhUOo5IYDjNcrqS1LcRqo4Bg
      eHXneFzO1Ve7e8UsAd2+fZvc3FwuXLiA1+ulp6cHpRRjY2Pm/f2RSITR0VEMw8Dn8zH65Tf8
      UChEKBQyawYLIYR4uRUzA3A4HOTk5JCamoquz+7ZMT09zcDAAF1dXbS2tnLq1Clqa2uJxWJc
      v36d3NxcpqamuH//Pg6HgwMHDsjFWSGEWKIVMwPwer10dHRQX19vBrrmvuXHYjFGR0cpKiqi
      ubmZUChEJBIhFosRCARwu928++67UhJSCCGWYcUMAJmZmezfv98sHwkwPDyM2+1G13XS0tIY
      Hh6mvb3drBXsdrvJycnB5XJJgQchhFimFbMEdPToUfNnTdM4ePAgmqYxMzNjpoE//PBDAoEA
      Ho+HDz74gHA4THp6OqWlpUnsuRBCrE4rZgCYn/jVNM1M2mZnZy84LiMjA5itE+x0Ol947Zz0
      Qwdwh6y5KLyUJLDty1mKEOLlHHYbHx+wNgk8xzAUmsaCutvxkOp2xvV8ibBiBoB4y3jvPUkC
      C7FKOOw2/sH7iUkCz9UElr3DVtA1ACGEEIm1ZmcAw7/xL61LAisF86aPtowMyv7z71jTlhDr
      QDgS42//xv94pdf+3Dtb+XDfhjj3aH1YEQOAUopHjx4RjUZ54403zLX9ueeUUthstmXtwqki
      EVSCgmFKUr9CvBYFhKOvVrNXn1cfRCzPilgCunfvHtFolOzsbLxer1nfNxgMMjQ0xLlz5/D5
      fJw4cYKxsTGzSPzIyAgwmwQOBoOSBBZCiGVYEQNAXl4ejx49IhwOk5OTQ1tbGwBtbW1MT08z
      OTnJ9PQ009PTDA8PMz09zblz53j69CmPHj3i888/59SpUzIACCHEMqyIJaDi4mK+9a1vcf36
      dfx+P0rNbtenlKKkpASfz0dZWRnFxcVs2rSJ7u5uIpEI0WiUUChESkoKb731Vtxv6xJCiLVs
      RcwAurq6uHjxIlNTU3g8HmZmZrh8+TLj4+OkpKTQ1dVl1vy9cOECHo8HpRQul4vs7GycTqd8
      +AshxDKtiBlATU0NJSUlaJqG2+2mvLyccDjMzp07sdlsfPTRR9hsNioqKvD5fKSnp/PRRx8R
      DodJS0ujrKws2W9BCCFWnRUxAGiaRmpqqvn/LpcL17w7a+Y/N5cEttlsZgJ4sTuD0g8fSlhN
      YEn9CvF6HHYbP3Fo4yu9tr48L869WT9WxABghYx335EksBCrhMNu4++/uy3Z3Vh3VsQ1ACGE
      EIm3ZmcAw7/+GzhHrEkCK+JXTjTnH/w8ntajLz9QiDUsHInxk7/+p3E738+/t40P90o6+GXi
      PgAYhkFnZycbNsz+5vf09FBQUEBaWtpLX/vkyRPq6uoWfU4pxeDg4JK3flbRGCpqXY1O9fJD
      lnYe49XSj0KsJQqIxuKX6DWMeP0LXdvivgSk6zo//OEP8fl8GIbBp59+yvDwMLqu8+zZM6LR
      KNFoFJ/Px8DAAEopDMNgcHCQR48eATA1NWXW+43FYgwNDWEYBpqmoes6Pp+P/v5+DMNAKUV/
      fz/BYDDeb0UIIdY0S5aAtmzZwp07dygsLKS2thaAU6dOUVVVxcmTJ6mtreXx48ekpaURDod5
      +PAhVVVVBINBRkdHuXbtGpmZmYyNjdHV1UVNTQ02m40HDx7gcDg4deoUNTU1jIyM4PV6ycvL
      o6Ojgw8++GDR2gBCCCFeZMlFYI/Hg9/vp6enh5qaGgBGRkYYHR01A1vNzc1s2LCBYDCI2+2m
      sbGR7Oxs+vv72bFjBzt37mRgYID09HQ2bdpEYWGhmRBubGxk8+bNZm3gpqYmKioqmJmZseLt
      CCHEmmTZXUDZ2dnmsg3Mbvdgs9nMgu9zj9tsNvx+P5cvX2Z0dJTKykouXbrEmTNnqK6uJhQK
      0dbWxtDQkHnu+anf9PR0Ll26ZCaFhRBCLE3c10scDgcHDhxA0zSUUuaHdXV1tfltX9O0BQPD
      hg0b8Pv9ZvL37bffRtd1UlNTqampMff7KSwsRNM08vLy0DSNN998E03T8Pl87Nq1Syr8CCHE
      MsR9AJj/4f78/jyL3Qk0d8xcwhdYELLSNO2F1z1//vmvneM5chi3RbuDLqcuwcu4qqvjch4h
      VjOH3cZ3DzfG7XwNZblxO9datmavmHreeVuSwEKsEg67jZ97Z2uyu7HuSBJYCCHWqTU7Axj+
      1V/HMTpizcmXEAW2Z2ZR9v/8Z2vaF2KNCUVifPfX4pcEXqp/+H4LH+xtSHi7K8WKGgC6u7sp
      KioiNTWV6elpsxDMYqampnA4HHg8nkWfV7oOseSlbFUslrS2hViNYnria/saan0nhlfUEtCN
      Gze4ceMGAFeuXOHOnTsYhsHAwAA+nw+lFMFgkOnpafMOo7nw2PT0dJJ7L4QQq8uKGgAyMjLw
      +/3o+uw3d6fTyejoKDMzM3z66afEYjH++I//mJs3bzI0NMTk5CSff/45g4ODfPHFF0nuvRBC
      rC4ragCA2QLxN2/epLKyEoCJiQmGh4cJh8NEo1EqKys5ePAgNtts1zMzM9myZQs5OTnJ7LYQ
      Qqw6K24AaGxs5OLFi+YeQsPDwzidTqJf7uw5V/9XagALIcTrWVEXgY8ePYqmafziL/4imqZx
      5MgRNE0jEAiwZ88eNE3j4MGDADQ0zF65n9se+vDhw0nrtxBCrEYragCYW9Z5Puk7P9D1/HPz
      9xSaz3P0CO5IxJJ+LiUJrElQTIglc9ht/K0jmxLS1tweZZqm0VC+vhPDK2oAiCfP229JEliI
      VcJht/H33t6SkLai0Sg2m032DmMFXgMQQgiRGGt2BjD8vV/DMWJREniVsOfnU/Y7/zHZ3RDi
      pUKRGN/53v+XkLbSU5z84a98OyFtrXSWDgCGYTAxMUF+fj5jY2Pk5OS8dNql6zq9vb1mIZnn
      z/f06VOzbvD09DSRSITc3NwXzqsMA4zEJwtXFKk3LFaRRKVy13v6dz5Ll4BisRh37twB4P79
      +0QiEYLBIEopAoEAkUiEqakpBgcHmZ6eZmRkBMMwePLkCX19fSilUErR19dHIBAwf4bZD/8n
      T54wPj7OJ598wsjIiHmrqBBCiJez/BpAV1cXFy5coKurC6UU7e3tAFy+fJnu7m4uX75Me3s7
      d+7c4ezZsxiGwfDwMDMzM5w/f56zZ8/i8/n4/PPPiX25v86zZ89ob283BxO/38/ExISZIBZC
      CPFyll8DqKysZOfOnUQWuSVT0zSampoYGRmhpqYGwzAwDIOqqio2bdrEyZMnUUrR2NhIKBQy
      a/729PRw4MABxsfHCQQCFBUV8cYbb0g4TAghlsHyGYDT6cTtduNwONA0jZGREc6fP4/P5/va
      1/T09HDy5EmKiorIyMjg/PnzdHd3k52djaZpVFRUcPLkSa5duwZAVlYWZ86c+cZzCiGEWMjS
      GYDT6eTQoUMAHDhwAIBvf/vbKKVwuVzmcXNbPs8d81M/9VMYhoHT6QQgGAySkpKCpmnm+QoL
      C7Hb7Tgcs29hrm6wEEKIpbF0AJi/JDP38/wP/q8z96E+Z7Faws9/2Kempi74f8+x1lVRE/h5
      81OKr8u2yO+bECuRw27jp1qbEtKWXdJPpjWbA/AcP7Yqk8DRaBS73f7C1hZCrGUOu42fOd6c
      kLbkbsGvyKeMEEKsU2t2BjD0K9/DOZy8JLAtK4vy//pfkta+EKtJKBLj27/yJ8nuhqV+8eOd
      vLO7PtndWMCSGUA4HObKlSs8ePAA9Q2pO6XUN967bxgGt27d4vbt2994nsVPvrzD407ShkKI
      eVbiJ4IlA8CZM2eor6/H7Xaj6zoTExMMDg4CEAgEmJycZGRkhEAgwCeffML4+Di6rvPs2TO8
      Xq95npMnT5KdnU1+fj66rhMOh5mYmCAQCJjnikajDA8PMzw8bAbFhBBCvJwlA0BpaSnnz58n
      JSUFm81GX18fz5494+bNm+Y9/WfPniUYDBIMBvF6vYyNjREIBDhx4gS6rmMYBkopKisrKSkp
      YXJykj/8wz9kcHCQy5cvA7NpYl3XmZyc5JNPPpEksBBCLIMlA0BTUxPvvvsuV69eZWRkhP7+
      fkKhENPT0zidTlpaWiguLiYjI4PCwkKqq6sZHx9ncHCQUChELBZD07QXvtHv2rWLpqaFt4q5
      XC6mpqZ45513ZI9+IYRYBksuAnd0dJibvc3t1ZOSkmIGu+ZomsbMzAw3btxgenoau91u3qKl
      aRrl5eWcOHECl8tFc3OzmQ+w2WycPXuWJ0+esGHDBm7cuEE0GiUnJ2fRzIAQQogXaWrZV1df
      TilFNBo1C7iHw2GcTuei97YbhkEsFsPpdBIOh18IeM0t68wPXimlCAaDX/thr+s63f/k/8KZ
      xHoAtsxMyn/vd5f9OqtzAFZmGCKRCA6HY9X2fe7vqxWs7Hs4HMblclnSd6UUkUjE0r673W66
      unv5J7930ZI2Vor/7eOdvGvxXUDL/fywZAagadqCxO83/eWx2WzmsYtt5bBY4lbTtJd+0/cc
      P0aKRTWBY7qOQ2oCCxE3DruNnz62OSFtxTNtvxS6HsNud1BftvLqD6/ZHIDnWOuqTAILsR45
      7Db+ToIGgETXBF7JnxdrdgAAlp8dEEIkhUL+vSbDmh0Ahv7F9yy7BpD5s38P9wfvW3JuIdaj
      cCTGxwmsCfxH3/s4IW2tdCtuLyClFA8fPjSLw4yOjia7S0IIsSatuAEAoL29nRs3bhCLxXjw
      4AG6rtPX14fX60UpxcTEBN3d3RiGQSQSoaenx0wHCyGEWJoVOQCUlpYyPDxsZgLGxsYIhUKc
      OHGCcDjMiRMnCAaDnDt3jqGhIWKxGCdOnEhyr4UQYnVZkQMAwO7du7ly06pYoAAAFpxJREFU
      5QowOwAMDg4SDoeJRqNUVVWxceNGYrEYw8PDDA4OEgwGk9xjIYRYXVbkRWBN08jNzSUUCpGW
      lsbY2Bg2m82cEXR2dhIMBikpKaG3t5fMzEzZCE4IIZZpxQ0AmqbR2toKwLvvvgvMXhgOh8Mc
      PHiQSCRCbW0te/fuxeFw0NjYSDQaZf/+/cnsthBCrDorbgBYjKZpZkrY4XDQ0tKyYF+gxUIW
      GW8dx21REtheV2vJeYVYrxJZElJqAn9lVQwA89lsNjwez0uPS289amkSWAgRP4ksCi81gb+y
      6gaAJTMMlFX1ARY5t5agWLkQa5FSCt0wlvUau0WbDq4na3YAGPreryVsN1BbRgbl/+2/JqQt
      IdaicFTnJ371T5d8fKrbwZ/8xk9a2KP1IeEDgFKK27dvEw6H0TSNhoYGsrKyzOcfP35MQ0ND
      orslhBDrTlLmULW1tQwPD7NhwwbS09OZmpri2bNnKKXo6+ujr6+PmZkZlFIMDQ0xPDyMUgqv
      10tPTw9er5enT58SDoeJRCJ0d3dLElgIIZYp4QOApml4PB5SUlLIzMwkHA5z6dIlxsfHuXfv
      HmNjYwSDQc6cOUMkEmFsbIzbt28zMDDAp59+Sjgc5gc/+AHhcJi2tjaGh4fRdZ1PP/000W9F
      CCFWtaRfRZnb5sHn86GUoqCggA0bNuDxePB6vfT39xOLxfB6vRQUFFBfX091dTV1dXXYbDYG
      BwcZGhoiFAol+60IIcSqkrQBYK5kWXFxMUoplFJ4PB6zSo+mafh8PmKxmHm9YO65uddqmsbE
      xATwVelIIYQQS5O0u4Dm0r5ut5vvfOc7Zl3g6upqAI4cOQLMDhButxtN03jjjTf4/9u7s682
      zjSP498qlSTEboixabATC2QYh2xjx4l3jzuLYztOOp0+OXMmmZzuSc+Zydz23M2kM733n9DT
      M9fdOZn9ok/6NPEGcWMTEicHG8xiDAgsMKsEWql654KmDDa2wZbQwvO5QVSVildc6FGV3t/7
      ABw6dAiA/fv3Y1mWJIGFEOIBZMQ0UE3TcDqdy+5brk/wYndNAr/8Iu54agIfpmkuaScn/X+F
      eDiGQ+ftF1eeBDYMyd0kQ0YUgFQoOHxYegILkSUMh853/mJtksDilpwtAJgmKlUrhK4ysSiE
      uDelFIm5B/sez6Hr6LqW5BGtDzlbAAL/9IH0BBYiS8QSJm9+8PEDPfd7x57mtf31SR7R+pD2
      aaB3Y1kWgUBg2X1dXV1rPBohhMg9GV0Arly5AsxfHo6Ojtpp4aGhIZRSTE9PY1kW169fZ3p6
      Os0jFkKI7JIVt4Asy2J0dJRwOMzk5CQA165dY3JyEsuyKCkpoampiaNHj9p9AoQQQtxbxl4B
      LBaLxRgYGCAejxMMBgkGg3z22Wc8/fTTjIyMMD4+jsvlknX6hRBiFTK6AAwODnL69GmGh4eJ
      RCLEYjF0Xae0tJQTJ07Q2NiI1+slHA7jcrnumiUQQghxp4y9X2IYBu+++679+9atWzEMw14G
      Am71DK6rq0PX9SX7hBBC3FvGFoDbuVyuu+5b7r5/0dGXcaeo9ZtRW5uS8wqxXhkOnXdefvKB
      nrvjsY1JHs36kTUFYLUKDh2UnsBCZAnDofPmoR3pHsa6k7MFgLk5rHh8VU/RAO0eVxpCiNRQ
      ShFPrDwJ7HLKWkDJkLMFIPDPP1x1ElgvKKD633+dohEJIe4mljD5zg9XlgT2uAx++6H0A06G
      jPzW1O/3Y5omSin8fv+SfXNzc/T29qZpZEIIkTsysgAopWhra+PatWtMTU0xMzMDwMzMDKZp
      0tPTQ29vL6ZpEo1G6e3ttY8RQgixMhlZAKqrqxkbG+PKlSs8/vjjtLa2AtDa2opSiqmpKUzT
      5LPPPmNsbAxN0/j973+f5lELIUR2ycjvADRNo6GhgfHxcbsN5GLV1dX4fD4GBwcZGhrCsiyZ
      mSOEEKuUkVcAMD/vf2Huv9Pp5OzZs/T19aFpGv39/TQ2NlJVVWVfDUhPYCGEWJ2MvAKA+V7A
      mzdvBmDfvn3EYjEOHTqEUoq33noLpRSGYVBXV0cikWD//v1pHrEQQmSXjC0Ai2maZvcG1jRt
      aT9eTVs2JVz0ylHyVpkE1lyylpAQ6WA4dN49+tSKjxXJkRUF4EEUHDyQsiSwECK5DIfOGwf/
      LN3DWHdytgCoRAIrGk3NueNxLKVubdA0dGkSL8QDU0oRjSe/h3eeK2ff4pIiZ/87Ix98mLKe
      wLfTi4qo/vWv1uRvCZGLYgmTtz78j6SeMz/PyW8++HZSz5lrMu5m2o0bNwCYmJhgamqKgYGB
      NI9ICCFyU8YVgMuXL5NIJDh37hyFhYW4XC6i0Sg3b96kp6cHy7IwTZO+vj4CgQBKKQYGBhhd
      o0/7QgiRKzLuFlAsFuPjjz/m5ZdfRtd1Ojs7qaysxO/34/F4cDgcdHd3U1NTwx//+Eeeeuop
      /H4/mzZtoqKiIt3DF0KIrJFxVwAul4tdu3bR3d29ZHt9fT1bt24lkUig6zo1NTWUlJRQVVWF
      Uorr169jWVaaRi2EENkn4wqA0+nE5/NhmiZDQ0M4HA50XUfTNLvt44YNG2hsbMTv9zM5OYmu
      64TDYSkAQgixChl3C+jw4cPAfPoXYMuWLXcc09HRgdvtJhaLsXnzZsrKynA4HEsCYkIIIe4t
      4wrAStTU1DA9PU19fT2wfL/gouOvkJdI/rximO9JsLgPsXQRE+LhGA6d777ydFLP6TQy7gZH
      xsnKAuByudi48d6NoAv2709pT2C3BL+ESBrDofP6gfp0D2PdycoCsBIqFsPSk/MJQPd4knIe
      IcTylFKEo/dfu0vTwOOWNbuSJWcLwMiHP0pKElgvLKT63/41CSMSQtxNLGHylz/6z/sel+cy
      +Ej6ASdN2m6SjY6O0tfXt+rndXZ2pmA0Qgix/qTlCkApxddff00ikWDbtm3MzMwQDAYxTdOe
      6rlp0yb8fj+6rlNVVYVlWfT399PZ2UldXR2BQIB4PM7WrVsJhUJYloXT6ZQVQIUQYoXSUgAW
      5uuXlpYyPT1tT+vs7u7mqaeeorOzk6NHjxIOhxkaGkIpxdWrV/F6vSiluHHjBj09PRQXFxMK
      heju7qa4uJg9e/ak4+UIIURWSsstoL6+PiYnJ5mcnKS9vR1d1/H5fDzyyCPU1dVRXFzM9PQ0
      AwMDWJbFzMwMmqbh9XopKSlhZGSEHTt2sGPHDiYmJigqKuLIkSPk5+en4+UIIURWSssVwMDA
      AG+88Qa6rtPY2EhZWRmaptlz6w3DIBKJEI/HsSwLh8OBYRicO3eO4eFhdu7cydmzZ3G5XDQ0
      NNi9goUQQqxcWgrAkSNH7Mcvvvii/fjgwYMAHDhwAIDKykqcTieapuHz+YjH4/Yxx48ft+/7
      V1dXr+HohRAiN2T0NNDFCV9N05aEr+639EPxieO451bXE3g5mlNSvkKkmuHQ+Zvjz6zoOJE8
      GV0AHkb+vr0yI0iILGE4dE7uq0v3MNadnC0AKholVWuDKgBZCkKIpFFKMROJP/R53E4HTkMW
      hVypnC0AI//y45T1BC5+523yjh9LybmFWI9iCZO/+vF/PfR5vnfsGV7bL1cSK5XSArCQ9rUs
      i6KiIhoaGu56bF9fH5WVleTl5aVySEIIIf4kpd+obNiwgfr6ekKhEDU1NQSDQQCCwSBKKW7e
      vEl3dzeWZTE2NkYikbCPmZ6eJhKJMDw8TG9vL4FAgP7+fpRSjI+Pc/XqVUKhEKZp0tPTw8TE
      RCpfihBC5JyUFoCFpRlcLhcej4e2tjYA2traCIVCfP7552iaRktLi/2cxccMDAzQ09NDV1cX
      w8PDXLp0ibm5Of7whz/g8Xg4f/48ra2t6LpOS0sLicTDz/oRQoj1Yk3nVCml7McTExN4vV68
      Xi+RSGTZYzRNo6amhoqKCrxeLxs2bMCyLCorK9myZQsul4vR0VECgQAul0sKgBBCrMKaFICF
      hK/H4+HMmTNcv36dyspKOjs7OXPmDN/4xjcwDANN0wiHw5w7d47p6Wl7YbiFfQuhMKdzfj1w
      p9PJ9u3bCYfDdlpYCCHEyqT8HdMwDPbv3w/A888/Tzwet/v+vvrqq8zNzS0JfB07duyObZWV
      lQD2Ym979+4FsM/r8/nspvFCCCFWZk0/Mt+e5tV1/Y5+vsttu5/lEsHFr54gby41PYF1X21K
      zivEemU4dN478ecPfZ7HH7t3q1ixVM7eM8nfuyelPYGFEMljOHRe3bs93cNYd3K2AKhIBNNS
      9z/wPjRtvi2kECJ1lFKEwnf/YFWUL8n7VMjZAjDyo59IT2AhskQsYfL2T/572X3SBzh1UvKt
      6ezsLOfPn+fLL7+0u3/dS2dnJxcuXKCrq2vJNNDbKaXo6+tDKUU0Gk3mkIUQYt1JSQFobm7m
      ySefZPPmzViWhd/vp6enB8uymJqaoq+vj+HhYfv4gYEBGhoaCAQCjI6OEgqF6OjoIB6PMzU1
      hd/vp7+/H4C8vDxGRkb43e9+RyAQIJFI0NHRIUlgIYRYpZQUgG3btnHq1CkikQi6rjM7O0sw
      GOTSpUs0NTWhlKK1tdU+fmZmhgsXLhAIBCgtLaWpqYmSkhKam5u5ePEi4XCYS5cuYZomHR0d
      GIaB0+nE6XTS1NREYWEh58+fJx5/+NUEhRBivUhJAfD5fBw/fpyenh6Gh4fp6enBNE1mZmYo
      LCzE6/VSXFxsH19UVMSBAwfwer34/X5u3rzJ9evXKSgosMNe5eXl9u2kkpISSktL7W1btmyh
      srKS2dnZVLwcIYTISSn5EritrY2ZmRkikQhut5toNEooFMLj8dhhrYU0L0A0GqW5uZlgMEht
      bS1VVVWYponH47GXd1icAtZ1nbGxMTo6OigrK+Ps2bOEQiGeeeb+HYWEEELMS0kB2LlzJ6Zp
      4nA40DSNkydP4nA4liR1F1K8MJ8IXuyb3/wmpmkuWdrhueeeA271C37ttdfshvGJRMIuEEII
      IVYmJQVA07Qlb96LP+0/yPOXs7BOELBscrj45Kvkmeaq/u6yY1nl2IUQq2c4dP721eWTwNIH
      OHVyNgeQv+d56QksRJYwHDrH90gSeK3lbAGwZmcx73MFoOXloa9y3SEhRPIppZieTU62R0Oj
      uECSwyuRswVg9Cc/u28SuPSv36H42CtrNCIhxN3EEibv//R/knKu/Dwnv/ng20k5V65L2821
      oaEhbty4AYDf71/1803TpLOzM9nDEkKIdSNtBaC3t5eWlhYsy+Lq1asopQgEAnR3d2OaJpOT
      kwBMTk4yOztLR0fHkm2dnZ3cuHHjjn1CCCFWJm0FQNM0duzYQXt7OwChUIj29nZM0+Ty5ctc
      uHABy7JobW0lFAqRn5/Pp59+amcGSktL51cQXLRPCCHEyqV1ftWjjz6K3++3P/EHg0HGx8dx
      uVyUl5dz5coVqqqquHbtGiMjI8zNzTE5OYnX62XTpk0YhrFknxBCiJVLWwFwuVzous6uXbsY
      GBigsrISwzAwTZO8vDwef/xxmpqaqKurIxKJEIvFsCyL8vJyurq6aG5uRilFOBy29wkhhFi5
      tM0CWkj2VlRU8N577wHzieCFBLBSiu9///sYhsGRI0eYm5tbkgI2TROn04lSask+IYQQK5NR
      00AXJ4Bvf7w4Tbw4BXz7vgXFr58kb+7eOQB3XV2yhi6EeAhOh87fndyZlHMZhiSHVyqjCkAy
      5T/3nCSBhcgSDofOK8/70j2MdSdnC4A1M4P5p5VEH4qm4SgpefjzCCHuSinFZCiy4uM1TaO0
      MC+FI1ofcrYAjP7059ITWIgsEUuYvP/z/13x8R63wW9/KH2CH1bKb5YlEgkuXrzIxYsX7+j3
      e/ny5VT/eSGEEHeR0gKglOL06dNs27aN7du3Y5omV69eZXBwEICRkRGUUvT399PV1XVHAnhh
      uYfR0VESiQTBYJDBwUFmZma4cuUKExMTWJZFd3e3fU4hhBArk/IrAE3T2LhxI6WlpUSjUVwu
      F5cuXWJqagqYLxLxeJxQKMRXX321JAHc2tpKfn4+bW1tjI2N8dFHH2FZFrOzsxQUFHDq1Cn6
      +vokCCaEEA8g5QUgHo/bt34CgQADAwNomkY0Or/0azgcpquryw51lZeXc/nyZaqqqrh58yZ+
      vx+3200ikWD37t08+uij9Pb2Mjo6immabN26FV3X6ejouO/yz0IIIW5JaQHQNI26ujo++eQT
      GhsbicfjxGIxIpEIuq7jdrsxTZNoNMr09DROp5OGhgaam5upq6ujvr6e2dlZe66/2z2/xnck
      EiESiWBZFuPj48zNzZFIJO74jkEIIcTdpXwWUG1tLV6vF5gvCD6fD8Mw0DSNiooKAE6ePGlv
      W5wA9vl8eL1eNE1D13UqKysB7GTwQgCsvLwcXddxOBypfjlCCJEz1mQa6OJm8Muldhdvu70f
      8HJv6renf5c7Z8m3XsctPYGFyApOh87fv75rxcdLn+DkyNkcgGf3s5IEFiJLOBw6R3fXpnsY
      607OFgArFGIuHrd/1z0e9DxJDgqRiZRSTATvnQT2uJ143Dn7lpUWOfvfHP3ZL5YkgUvfeZvi
      48fSOCIhxN3EEibv/+LeSeDvvvI0rx+oX6MRrQ9rfiNtaGiIpqYmO/h1/fr1Jft7enrsKaLL
      7RdCCJEca1oAlFJ88cUX7N69m5KSEjRNIy8vj2g0Snt7O2NjY0xMTGCapv3T4/EwNjYGzLeN
      jMVi9Pf3093djWVZdqBMegILIcTqrPkVQHl5OadPn0bTNEzTpKuri/Pnz1NQUEAsFgNgfHyc
      L774AoCuri7a29sJBoNcuHCBoaEhhoeHSSQStLe38+WXXwLYP4UQQqzMmheAPXv2cPjwYZqb
      m+1tO3fupL+/n2vXrmFZFp9++ikNDQ1L9re2tqJpGsFgkNraWmpra+1P/0IIIVZvzW8BNTY2
      0tLSYt8CcrvdDA8PYxgG8Xgct9vNm2++yddff000GsXtdlNYWMjk5CQ+n4+amhpaWlo4deoU
      Pp8PpRRnzpyxbxMJIYRYmTWdBaTrOi+88ILd9xfmewMrpUgkEjidTjRNA+Cll14CYPfu3YyN
      jZGfn8+WLVvQNI1jx46hlMIwDDZv3rwkFSyEEGJl1nwa6O1J34VtLpfrrs8pKCjghRdesIvD
      4nTw3XoCl7zxLfKsW0lgV620mxMiUzkdOv/wrWfvecz2LeVrNJr1IytyAB6PZ/XPeXaXJIGF
      yBIOh85Lz9akexjrTlYUgAdhTQeZ+1OeAEDPz0d/gEIihEg9pRRj02EAXIaD4gJ3mke0PuRs
      ARj9xS8lCSxEloglTN7/5f8BsLOukg/ePZTmEa0PGb2k3tzcnPQNFkKIFMnoK4CFhi+Dg4MM
      Dg4SiUTYu3cvw8PDeL1euru7KS8v56uvvmLjxo088cQT6R6yEEJkjYy+AlgwPDzM9u3bKSsr
      Y2Zmho6ODsLhMDdu3ODzzz/n4MGDTExMMDs7m+6hCiFE1siKAgDzM4EWpns+9thjfPLJJzzx
      xBN2tzCn0yk9gYUQYhUyugDouk5FRQWPPPIIhmFQWlqK2+2mrq6OSCRCWVkZO3bs4NSpU+i6
      TnFxcbqHLIQQWSOjvwMwDIP6+lvrf1dXV6OUoqWlhX379tnbqqur0zVEIYTIWhldAJajaRp7
      9uy573Eb//EH5LtuJYT1oqJUDksI8RDcTge/+sEJ+7FYG1lXAFbKUbYBQ5LAQmQFTdPYXFaY
      7mGsO/8Pqev9VHKWzDgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='NorCal Fatalities by County' width='384'>
      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
      eAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='328'>
      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
      uzsuLi6/+t40NTWxevVqAFxcXJg9ezbBwcE0NDRw6tQpduzYwbFjx9p9H4W4UlVVVRw4cIAh
      Q4aY/OEeOHAgXl5el+1m+/v7K+EILZ9lY+8tOTmZvXv3Mn78eKAldzZu3IiHhwdfffWVyTBS
      ly5dmDVrltn5rRKQp0+fVl77+Phc0bGff/65xTG7oKAgJk6ciF6vJysrq93nCwsLIywsDFdX
      V5PtAwcOpLi4mMjISPR6PTk5OUpA3nPPPTg6OqLVaomLizMLyNjYWKAldO68804AIiMjqa6u
      BuC1117jnnvuAaB79+4sWbJEmblbv369xYCsqalh8eLFAIwaNYq5c+fi7+9/VfemoKAAnU4H
      wJNPPsnUqVOVfbfffjuPPPIIOTk57biLQvw60dHR6PV6i63EsLAwIiIiSExMNOl+t6Y2dj9z
      5kySk5M5cuSIEpBxcXE0Njby7LPPtnuM3Sqz2FVVVcrrrl27XtGx/v7+Fm+Kq6srd911F9Cy
      yLS9XF1dzcLRaOLEicrr1ud0cHBg5MiRABw4cEAZLoCWluKBAwcAGD16NJ06tfwNOnToEAB2
      dnaMGDHC5Dr29vbccccdABw5ckQZO7zUxYsXmTp1KsuXLzcLR7jye9P63icmJnL27FmzYwMD
      Ay3WRYhrwdi9thSQVzOb3bdvXwCKioqUbadOnQJg+PDh7T6PVVqQXl5eyutz587h7e19Rccf
      PnyY7du3k5+fT2lpKTU1NTQ3N1NfXw+gGjBqampqiIqKIjExkbKyMsrKymhsbDQ5z6VPZI4d
      O5Y9e/bQ2NhIcnKy8hcuKSlJGWNs/VfPuJ7Tw8PD4vOjxu5FU1MTZWVlFsdlH3/8cebPn9/m
      e7mSe+Pu7s6QIUM4dOgQhw8f5qGHHqJ///4MHz6c++67jyFDhlyTlQFCWFJZWUl6ejp2dnZ8
      /vnnZvuNn7mkpCS0Wi2Ojo7tPrezszP29vYmjTHj0F6PHj3afR6rBGTv3r2V10VFRUrrqT2W
      LFli9uylra0tGo0GvV5/xXUpLCzkqaeeoqamxmS7nZ2dWSi2NnLkSBwcHKivrycuLk4Jw7i4
      OMC0ew1w/vx5AM6ePcszzzzTZp0sTfw4OTnxyiuvtHncr7k3ixcv5t133yUpKQmDwUBWVhZZ
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      5HK5JEm7d+9Wf3+/SktL1djYqEuXLsnj8WjlypWSpLq6OlVUVMjtduv48eOKioqS4zi6ePGi
      zpw5o+XLl6urq0vnzp3TlStXdP/996uxsVG1tbW67777VFBQoMHBQe3Zs0dpaWn6xje+oVdf
      fVWhUEjLli3T7373O82aNUvLly+f+isDAJ9yET8BLFu2TGvXrlVlZaWio6Pl8/nkdrtVWVmp
      AwcOqLi4WFVVVeH5oVBIW7du1Z/+9CfV1tbqjTfeUGZmptLT05WRkaEXX3xRtbW1ysjIUHt7
      uzo7O7Vt2zZ9+9vfVlxcnPbv36/Dhw8rGAzqlltu0f79++V2u7V48WLt2LFDxcXF6uzsVGNj
      45RfGAD4tIsYAJ/Pp40bNyoYDKqqqkqVlZVKS0tTMBiUy+XSvHnzlJCQ8P8Hc7v1zW9+UwsX
      LpQkfe9739PMmTP14osvKiUlRcFgUJKUl5enpKQkBQIBzZw5UykpKeHjLFmyRLm5uVq/fr36
      +/s1Z84cZWZmamBgQLm5ucrOztbAwMBUXQ8AMCNiAA4dOqTHH39cV69eVXFxscbHx9XS0qLM
      zEz5/X5JCv8pSfPmzdOsWbOUmJio7OxsxcTEKDo6WnFxcfrb3/4WfgOPiYlRVlaWkpOT5ff7
      9cQTT+j06dPy+/1qbGzU3//+d82ZM0f33HOP/vCHP2j9+vUqLS3Vhg0b1NDQoDvvvHNqrwoA
      GOByHMf5uDcBALj5+GegAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKOuG4Cenh4NDQ39VwcbGhrS6Oio
      JCkQCGh4ePij7Q4AMGUiBmDXrl3asmWLnnnmGQ0ODspxHIVCofD4xMTENY8rKiq0ceNGSdKm
      TZtUUVERnjcxMSFJevbZZ8Pzx8fHw+sdx1EwGJyk0wIAXE9UpMGenh5lZmZqxYoVSkhI0Nq1
      a9XT06OVK1fq4MGDio+PV3Nzs379619LkuLi4nT16tXwG77b7VZHR4d27Nihs2fP6sEHH1RN
      TY1CoZCWL1+u3/zmNwoGg1q1apWefPJJxcfH68tf/rLuvvvum3LyAGBZxE8AjzzyiHw+n8rK
      ynThwgUlJCQoPT1dzc3NCoVCKisr0+zZs69Zk5+fr71796qwsFCSFBUVpbi4OE2bNk0ej0eF
      hYV69NFHdfToUcXHxys6OlqVlZW6/fbb9Ytf/EI1NTVTd7YAgLCIAXjllVc0OjqqGTNmqK2t
      Td3d3UpNTY14wMWLF2vTpk0qKSmRJB05ckSpqamKi4uT9N6tngMHDsjv9ys+Pl5f/epX9YUv
      fEEnTpzQ3r17lZWVNUmnBgCIxOU4jvNBgwMDA2pqapLP51NOTo6OHTum1NRUxcfHKxAIyO/3
      q729XX6/X5J05swZzZkzR++8845uueUWtbW1KSsrS3V1dcrKytKsWbMUDAZ18uRJLVq0SKdO
      nVIgEFBRUZE6Ozt19uxZLVy4UB6P56ZdAACwKmIAAACfXvweAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMCo6wagp6dHQ0NDH/mFBgcH1dfXp/HxcbW0tHzk4wEAPpqIAdi1a5e2bNmiZ555RoODg3Ic
      R6FQKDw+MTERfrx+/frw86FQSI7jhB+/+eabWrNmjZ5//nldvXpVv//979933getBwBMvqhI
      gz09PcrMzNSKFSuUkJCgtWvXqqenRytXrtTBgwcVHx+v5uZm/fjHP1Z1dbXi4uJUUlKiffv2
      qb29Xc8995xiYmL05ptvat26dXK73RocHJQkvf322+F5Tz/9tB599FFFRUXpoYce+o/1AIDJ
      F/ETwCOPPCKfz6eysjJduHBBCQkJSk9PV3Nzs0KhkMrKyjR79mwVFRWpsLBQDz/8sGJiYhQb
      G6uxsTH19/e/9yJut9zua1/q/eb96w3/358HAEy+iAF45ZVXNDo6qhkzZqitrU3d3d1KTU19
      37mDg4Oqra3V/v37NW/ePEVHR4fHFixYoE2bNumll14K39r593lZWVnyeDzvux4AMPlcToSb
      7QMDA2pqapLP51NOTo6OHTum1NRUxcfHKxAIyO/3q729XX6/X11dXero6ND8+fPV2NiozMxM
      +Xy+8C2cpqYmjY2N6dZbb1VnZ6cSExPD87Kzs3Xx4kXl5uZqcHDwfdcDACZXxAAAAD69/g/8
      ROXhI2/cBQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
